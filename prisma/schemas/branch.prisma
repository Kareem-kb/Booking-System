model Branch {
  id               String                 @id @default(cuid())
  contactEmail     String?
  phoneNumber      String?
  website          String?
  operatingHours   BranchOperatingHours[]
  translations     BranchTranslation[]
  staff            Staff[]
  services         Service[]
  appointments     Appointment[]
  calendarEvents   CalendarEvent[]
  sales            Sale[]

  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt
}

model BranchTranslation {
  id        String   @id @default(cuid())
  branchid  String
  language  String
  name      String
  address   String
  branch    Branch   @relation(fields: [branchid], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([branchid, language])
}

model BranchOperatingHours {
  id        String   @id @default(cuid())
  name      String
  dayOfWeek Int
  openTime  String
  closeTime String
  isClosed  Boolean
  branchId  String
  branch    Branch   @relation(fields: [branchId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([branchId, dayOfWeek])
}

model Staff {
  id             String            @id @default(cuid())
  userId         String            @unique
  branchId       String
  user           User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  branch         Branch            @relation(fields: [branchId], references: [id], onDelete: Cascade)
  role           String
  profileImage   String?
  staffServices  StaffService[]
  translations   StaffTranslation[]
  appointments   Appointment[]
  calendarEvents CalendarEvent[]
  sales            Sale[]

  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt @default(now())

  @@unique([userId, branchId])
}

model StaffTranslation {
  id        String   @id @default(cuid())
  staffId   String
  language  String
  name      String
  aboutMe   String?
  staff     Staff    @relation(fields: [staffId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([staffId, language])
}

model Service {
  id            String               @id @default(cuid())
  category      String?
  price         Float
  duration      Int
  availability  Boolean              @default(true)
  branchId      String
  branch        Branch               @relation(fields: [branchId], references: [id], onDelete: Cascade)
  translations  ServiceTranslation[]
  images        String[]
  staffServices StaffService[]
  appointments  Appointment[] 
  sales            Sale[]

  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
}

model ServiceTranslation {
  id          String   @id @default(cuid())
  serviceId   String
  language    String
  title       String
  description String
  service     Service  @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([serviceId, language])
}

model StaffService {
  // id        String   @id @default(cuid())
  staffId   String
  serviceId String
  staff     Staff    @relation(fields: [staffId], references: [id], onDelete: Cascade)
  service   Service  @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@unique([staffId, serviceId])
}
