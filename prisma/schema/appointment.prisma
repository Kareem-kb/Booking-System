enum Gender {
  MALE
  FEMALE
  OTHER
}

enum AppointmentStatus {
  BOOKED
  ACTIVE
  DONE
  CANCELLED
}

enum CalendarEventType {
  AVAILABLE
  APPOINTMENT
  CLOSURE
}

model Appointment {
  id              String      @id @default(cuid())
  userId          String
  staffId         String
  branchId        String
  serviceId       String      // Direct service reference
  reason          String?
  age             Int
  gender          Gender
  phone           String
  status          AppointmentStatus @default(BOOKED)
  appointmentDate DateTime
  duration        Int?        // Optional override of service duration
  
  // Relations (1 service per appointment)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  staff   Staff   @relation(fields: [staffId], references: [id], onDelete: Cascade)
  branch  Branch  @relation(fields: [branchId], references: [id], onDelete: Cascade)
  service Service @relation(fields: [serviceId], references: [id], onDelete: Restrict)
  
  // Calendar link
  calendarEvent CalendarEvent?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([appointmentDate])

}

model CalendarEvent {
  id            String            @id @default(cuid())
  startDate     DateTime
  endDate       DateTime
  eventType     CalendarEventType @default(AVAILABLE)
  closureReason String?
  
  appointmentId String?  @unique
  branchId      String?
  staffId       String?

  appointment   Appointment?      @relation(fields: [appointmentId], references: [id], onDelete: SetNull)
  branch        Branch?           @relation(fields: [branchId], references: [id], onDelete: Cascade)
  staff         Staff?            @relation(fields: [staffId], references: [id], onDelete: Cascade)

  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  @@unique([staffId, startDate, endDate])
}

